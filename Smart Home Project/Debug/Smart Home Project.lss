
Smart Home Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005be  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000612  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000612  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000644  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000680  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c31  00000000  00000000  00000760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007d7  00000000  00000000  00001391  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000677  00000000  00000000  00001b68  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  000021e0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000046a  00000000  00000000  00002384  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ed  00000000  00000000  000027ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00002bdb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
   4:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
   8:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
   c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  10:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  14:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  18:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  1c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  20:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  24:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  28:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  2c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  30:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  34:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  38:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  3c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  40:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  44:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  48:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  4c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  50:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  54:	70 00       	.word	0x0070	; ????
  56:	74 00       	.word	0x0074	; ????
  58:	79 00       	.word	0x0079	; ????
  5a:	7b 00       	.word	0x007b	; ????
  5c:	7f 00       	.word	0x007f	; ????
  5e:	83 00       	.word	0x0083	; ????
  60:	85 00       	.word	0x0085	; ????

00000062 <__ctors_end>:
  62:	11 24       	eor	r1, r1
  64:	1f be       	out	0x3f, r1	; 63
  66:	cf e5       	ldi	r28, 0x5F	; 95
  68:	d8 e0       	ldi	r29, 0x08	; 8
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	cd bf       	out	0x3d, r28	; 61
  6e:	0e 94 3d 00 	call	0x7a	; 0x7a <main>
  72:	0c 94 dd 02 	jmp	0x5ba	; 0x5ba <_exit>

00000076 <__bad_interrupt>:
  76:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007a <main>:

int main(void)
{
	/* Replace with your application code */
	char x ;
	init_uart(9600);
  7a:	80 e8       	ldi	r24, 0x80	; 128
  7c:	95 e2       	ldi	r25, 0x25	; 37
  7e:	0e 94 c4 00 	call	0x188	; 0x188 <init_uart>
	SPI_init(master);
  82:	86 e0       	ldi	r24, 0x06	; 6
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	0e 94 89 00 	call	0x112	; 0x112 <SPI_init>
	SPI_clock(fosc128);
  8a:	84 e0       	ldi	r24, 0x04	; 4
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 67 00 	call	0xce	; 0xce <SPI_clock>
	SPI_enable(enable);
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	0e 94 5e 00 	call	0xbc	; 0xbc <SPI_enable>
	DDRC = 0xFF;
  9a:	8f ef       	ldi	r24, 0xFF	; 255
  9c:	84 bb       	out	0x14, r24	; 20
	DDRA = 0xFF;
  9e:	8a bb       	out	0x1a, r24	; 26
		x = uart_receive_char();
		PORTC = x;
		uart_send_char(x);
		if (x == 'B')
		{
			PORTA = 1;
  a0:	d1 e0       	ldi	r29, 0x01	; 1
	SPI_enable(enable);
	DDRC = 0xFF;
	DDRA = 0xFF;
	while (1)
	{
		x = uart_receive_char();
  a2:	0e 94 ca 00 	call	0x194	; 0x194 <uart_receive_char>
  a6:	c8 2f       	mov	r28, r24
		PORTC = x;
  a8:	85 bb       	out	0x15, r24	; 21
		uart_send_char(x);
  aa:	0e 94 c0 00 	call	0x180	; 0x180 <uart_send_char>
		if (x == 'B')
  ae:	c2 34       	cpi	r28, 0x42	; 66
  b0:	09 f4       	brne	.+2      	; 0xb4 <main+0x3a>
		{
			PORTA = 1;
  b2:	db bb       	out	0x1b, r29	; 27
		}
		spI_write(x);
  b4:	8c 2f       	mov	r24, r28
  b6:	0e 94 9b 00 	call	0x136	; 0x136 <spI_write>
	}
  ba:	f3 cf       	rjmp	.-26     	; 0xa2 <main+0x28>

000000bc <SPI_enable>:


char spI_read(){                      // call this function to receive data
		while(!(SPSR &(1<<SPIF)));
		return SPDR;
}
  bc:	00 97       	sbiw	r24, 0x00	; 0
  be:	19 f0       	breq	.+6      	; 0xc6 <SPI_enable+0xa>
  c0:	01 97       	sbiw	r24, 0x01	; 1
  c2:	19 f0       	breq	.+6      	; 0xca <SPI_enable+0xe>
  c4:	08 95       	ret
  c6:	6e 9a       	sbi	0x0d, 6	; 13
  c8:	08 95       	ret
  ca:	6e 98       	cbi	0x0d, 6	; 13
  cc:	08 95       	ret

000000ce <SPI_clock>:
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	87 30       	cpi	r24, 0x07	; 7
  d2:	91 05       	cpc	r25, r1
  d4:	e8 f4       	brcc	.+58     	; 0x110 <SPI_clock+0x42>
  d6:	86 5d       	subi	r24, 0xD6	; 214
  d8:	9f 4f       	sbci	r25, 0xFF	; 255
  da:	fc 01       	movw	r30, r24
  dc:	0c 94 d7 02 	jmp	0x5ae	; 0x5ae <__tablejump2__>
  e0:	8d b1       	in	r24, 0x0d	; 13
  e2:	8c 7f       	andi	r24, 0xFC	; 252
  e4:	8d b9       	out	0x0d, r24	; 13
  e6:	08 95       	ret
  e8:	68 9a       	sbi	0x0d, 0	; 13
  ea:	8d b1       	in	r24, 0x0d	; 13
  ec:	8c 7f       	andi	r24, 0xFC	; 252
  ee:	8d b9       	out	0x0d, r24	; 13
  f0:	08 95       	ret
  f2:	68 98       	cbi	0x0d, 0	; 13
  f4:	69 9a       	sbi	0x0d, 1	; 13
  f6:	8d b1       	in	r24, 0x0d	; 13
  f8:	83 60       	ori	r24, 0x03	; 3
  fa:	8d b9       	out	0x0d, r24	; 13
  fc:	70 98       	cbi	0x0e, 0	; 14
  fe:	8d b1       	in	r24, 0x0d	; 13
 100:	8c 7f       	andi	r24, 0xFC	; 252
 102:	8d b9       	out	0x0d, r24	; 13
 104:	68 9a       	sbi	0x0d, 0	; 13
 106:	68 9a       	sbi	0x0d, 0	; 13
 108:	69 98       	cbi	0x0d, 1	; 13
 10a:	8d b1       	in	r24, 0x0d	; 13
 10c:	83 60       	ori	r24, 0x03	; 3
 10e:	8d b9       	out	0x0d, r24	; 13
 110:	08 95       	ret

00000112 <SPI_init>:
 112:	86 30       	cpi	r24, 0x06	; 6
 114:	91 05       	cpc	r25, r1
 116:	19 f0       	breq	.+6      	; 0x11e <SPI_init+0xc>
 118:	07 97       	sbiw	r24, 0x07	; 7
 11a:	39 f0       	breq	.+14     	; 0x12a <SPI_init+0x18>
 11c:	08 95       	ret
 11e:	6c 9a       	sbi	0x0d, 4	; 13
 120:	87 b3       	in	r24, 0x17	; 23
 122:	80 6b       	ori	r24, 0xB0	; 176
 124:	87 bb       	out	0x17, r24	; 23
 126:	be 98       	cbi	0x17, 6	; 23
 128:	08 95       	ret
 12a:	6c 98       	cbi	0x0d, 4	; 13
 12c:	bd 98       	cbi	0x17, 5	; 23
 12e:	bc 98       	cbi	0x17, 4	; 23
 130:	bf 98       	cbi	0x17, 7	; 23
 132:	be 9a       	sbi	0x17, 6	; 23
 134:	08 95       	ret

00000136 <spI_write>:

void spI_write(char data){           // call this function to transmit data
	   SPDR = data;
 136:	8f b9       	out	0x0f, r24	; 15
 	   while(!(SPSR &(1<<SPIF)));    // looping to check if data register can transmit data
 138:	77 9b       	sbis	0x0e, 7	; 14
 13a:	fe cf       	rjmp	.-4      	; 0x138 <spI_write+0x2>

 13c:	08 95       	ret

0000013e <uart_setBaudrate>:
	char buff[11];
	itoa(num , buff , 10);   // to convert the number to string  
	uart_send_str(buff);    // calling this function to send the number
}
void uart_newline(){
	uart_send_char('\r');  // call this function to go to New Line to write on it
 13e:	bc 01       	movw	r22, r24
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <__floatunsisf>
 148:	20 e0       	ldi	r18, 0x00	; 0
 14a:	30 e0       	ldi	r19, 0x00	; 0
 14c:	40 e8       	ldi	r20, 0x80	; 128
 14e:	51 e4       	ldi	r21, 0x41	; 65
 150:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__mulsf3>
 154:	9b 01       	movw	r18, r22
 156:	ac 01       	movw	r20, r24
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	74 e2       	ldi	r23, 0x24	; 36
 15c:	84 e7       	ldi	r24, 0x74	; 116
 15e:	9b e4       	ldi	r25, 0x4B	; 75
 160:	0e 94 3b 01 	call	0x276	; 0x276 <__divsf3>
 164:	20 e0       	ldi	r18, 0x00	; 0
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	40 e8       	ldi	r20, 0x80	; 128
 16a:	5f e3       	ldi	r21, 0x3F	; 63
 16c:	0e 94 ce 00 	call	0x19c	; 0x19c <__subsf3>
 170:	0e 94 ad 01 	call	0x35a	; 0x35a <__fixunssfsi>
 174:	69 b9       	out	0x09, r22	; 9
 176:	80 b5       	in	r24, 0x20	; 32
 178:	8f 77       	andi	r24, 0x7F	; 127
 17a:	80 bd       	out	0x20, r24	; 32
 17c:	70 bd       	out	0x20, r23	; 32
 17e:	08 95       	ret

00000180 <uart_send_char>:
 180:	5d 9b       	sbis	0x0b, 5	; 11
 182:	fe cf       	rjmp	.-4      	; 0x180 <uart_send_char>
 184:	8c b9       	out	0x0c, r24	; 12
 186:	08 95       	ret

00000188 <init_uart>:
 188:	0e 94 9f 00 	call	0x13e	; 0x13e <uart_setBaudrate>
 18c:	8a b1       	in	r24, 0x0a	; 10
 18e:	88 61       	ori	r24, 0x18	; 24
 190:	8a b9       	out	0x0a, r24	; 10
 192:	08 95       	ret

00000194 <uart_receive_char>:


//receive section

char uart_receive_char(){
	while (!(UCSRA & (1 << RXC)));    // looping to check if data is ready to receive the character 
 194:	5f 9b       	sbis	0x0b, 7	; 11
 196:	fe cf       	rjmp	.-4      	; 0x194 <uart_receive_char>
	return (char)UDR;
 198:	8c b1       	in	r24, 0x0c	; 12
}
 19a:	08 95       	ret

0000019c <__subsf3>:
 19c:	50 58       	subi	r21, 0x80	; 128

0000019e <__addsf3>:
 19e:	bb 27       	eor	r27, r27
 1a0:	aa 27       	eor	r26, r26
 1a2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <__addsf3x>
 1a6:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_round>
 1aa:	0e 94 22 02 	call	0x444	; 0x444 <__fp_pscA>
 1ae:	38 f0       	brcs	.+14     	; 0x1be <__addsf3+0x20>
 1b0:	0e 94 29 02 	call	0x452	; 0x452 <__fp_pscB>
 1b4:	20 f0       	brcs	.+8      	; 0x1be <__addsf3+0x20>
 1b6:	39 f4       	brne	.+14     	; 0x1c6 <__addsf3+0x28>
 1b8:	9f 3f       	cpi	r25, 0xFF	; 255
 1ba:	19 f4       	brne	.+6      	; 0x1c2 <__addsf3+0x24>
 1bc:	26 f4       	brtc	.+8      	; 0x1c6 <__addsf3+0x28>
 1be:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_nan>
 1c2:	0e f4       	brtc	.+2      	; 0x1c6 <__addsf3+0x28>
 1c4:	e0 95       	com	r30
 1c6:	e7 fb       	bst	r30, 7
 1c8:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_inf>

000001cc <__addsf3x>:
 1cc:	e9 2f       	mov	r30, r25
 1ce:	0e 94 41 02 	call	0x482	; 0x482 <__fp_split3>
 1d2:	58 f3       	brcs	.-42     	; 0x1aa <__addsf3+0xc>
 1d4:	ba 17       	cp	r27, r26
 1d6:	62 07       	cpc	r22, r18
 1d8:	73 07       	cpc	r23, r19
 1da:	84 07       	cpc	r24, r20
 1dc:	95 07       	cpc	r25, r21
 1de:	20 f0       	brcs	.+8      	; 0x1e8 <__addsf3x+0x1c>
 1e0:	79 f4       	brne	.+30     	; 0x200 <__addsf3x+0x34>
 1e2:	a6 f5       	brtc	.+104    	; 0x24c <__addsf3x+0x80>
 1e4:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_zero>
 1e8:	0e f4       	brtc	.+2      	; 0x1ec <__addsf3x+0x20>
 1ea:	e0 95       	com	r30
 1ec:	0b 2e       	mov	r0, r27
 1ee:	ba 2f       	mov	r27, r26
 1f0:	a0 2d       	mov	r26, r0
 1f2:	0b 01       	movw	r0, r22
 1f4:	b9 01       	movw	r22, r18
 1f6:	90 01       	movw	r18, r0
 1f8:	0c 01       	movw	r0, r24
 1fa:	ca 01       	movw	r24, r20
 1fc:	a0 01       	movw	r20, r0
 1fe:	11 24       	eor	r1, r1
 200:	ff 27       	eor	r31, r31
 202:	59 1b       	sub	r21, r25
 204:	99 f0       	breq	.+38     	; 0x22c <__addsf3x+0x60>
 206:	59 3f       	cpi	r21, 0xF9	; 249
 208:	50 f4       	brcc	.+20     	; 0x21e <__addsf3x+0x52>
 20a:	50 3e       	cpi	r21, 0xE0	; 224
 20c:	68 f1       	brcs	.+90     	; 0x268 <__addsf3x+0x9c>
 20e:	1a 16       	cp	r1, r26
 210:	f0 40       	sbci	r31, 0x00	; 0
 212:	a2 2f       	mov	r26, r18
 214:	23 2f       	mov	r18, r19
 216:	34 2f       	mov	r19, r20
 218:	44 27       	eor	r20, r20
 21a:	58 5f       	subi	r21, 0xF8	; 248
 21c:	f3 cf       	rjmp	.-26     	; 0x204 <__addsf3x+0x38>
 21e:	46 95       	lsr	r20
 220:	37 95       	ror	r19
 222:	27 95       	ror	r18
 224:	a7 95       	ror	r26
 226:	f0 40       	sbci	r31, 0x00	; 0
 228:	53 95       	inc	r21
 22a:	c9 f7       	brne	.-14     	; 0x21e <__addsf3x+0x52>
 22c:	7e f4       	brtc	.+30     	; 0x24c <__addsf3x+0x80>
 22e:	1f 16       	cp	r1, r31
 230:	ba 0b       	sbc	r27, r26
 232:	62 0b       	sbc	r22, r18
 234:	73 0b       	sbc	r23, r19
 236:	84 0b       	sbc	r24, r20
 238:	ba f0       	brmi	.+46     	; 0x268 <__addsf3x+0x9c>
 23a:	91 50       	subi	r25, 0x01	; 1
 23c:	a1 f0       	breq	.+40     	; 0x266 <__addsf3x+0x9a>
 23e:	ff 0f       	add	r31, r31
 240:	bb 1f       	adc	r27, r27
 242:	66 1f       	adc	r22, r22
 244:	77 1f       	adc	r23, r23
 246:	88 1f       	adc	r24, r24
 248:	c2 f7       	brpl	.-16     	; 0x23a <__addsf3x+0x6e>
 24a:	0e c0       	rjmp	.+28     	; 0x268 <__addsf3x+0x9c>
 24c:	ba 0f       	add	r27, r26
 24e:	62 1f       	adc	r22, r18
 250:	73 1f       	adc	r23, r19
 252:	84 1f       	adc	r24, r20
 254:	48 f4       	brcc	.+18     	; 0x268 <__addsf3x+0x9c>
 256:	87 95       	ror	r24
 258:	77 95       	ror	r23
 25a:	67 95       	ror	r22
 25c:	b7 95       	ror	r27
 25e:	f7 95       	ror	r31
 260:	9e 3f       	cpi	r25, 0xFE	; 254
 262:	08 f0       	brcs	.+2      	; 0x266 <__addsf3x+0x9a>
 264:	b0 cf       	rjmp	.-160    	; 0x1c6 <__addsf3+0x28>
 266:	93 95       	inc	r25
 268:	88 0f       	add	r24, r24
 26a:	08 f0       	brcs	.+2      	; 0x26e <__addsf3x+0xa2>
 26c:	99 27       	eor	r25, r25
 26e:	ee 0f       	add	r30, r30
 270:	97 95       	ror	r25
 272:	87 95       	ror	r24
 274:	08 95       	ret

00000276 <__divsf3>:
 276:	0e 94 4f 01 	call	0x29e	; 0x29e <__divsf3x>
 27a:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_round>
 27e:	0e 94 29 02 	call	0x452	; 0x452 <__fp_pscB>
 282:	58 f0       	brcs	.+22     	; 0x29a <__divsf3+0x24>
 284:	0e 94 22 02 	call	0x444	; 0x444 <__fp_pscA>
 288:	40 f0       	brcs	.+16     	; 0x29a <__divsf3+0x24>
 28a:	29 f4       	brne	.+10     	; 0x296 <__divsf3+0x20>
 28c:	5f 3f       	cpi	r21, 0xFF	; 255
 28e:	29 f0       	breq	.+10     	; 0x29a <__divsf3+0x24>
 290:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_inf>
 294:	51 11       	cpse	r21, r1
 296:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__fp_szero>
 29a:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_nan>

0000029e <__divsf3x>:
 29e:	0e 94 41 02 	call	0x482	; 0x482 <__fp_split3>
 2a2:	68 f3       	brcs	.-38     	; 0x27e <__divsf3+0x8>

000002a4 <__divsf3_pse>:
 2a4:	99 23       	and	r25, r25
 2a6:	b1 f3       	breq	.-20     	; 0x294 <__divsf3+0x1e>
 2a8:	55 23       	and	r21, r21
 2aa:	91 f3       	breq	.-28     	; 0x290 <__divsf3+0x1a>
 2ac:	95 1b       	sub	r25, r21
 2ae:	55 0b       	sbc	r21, r21
 2b0:	bb 27       	eor	r27, r27
 2b2:	aa 27       	eor	r26, r26
 2b4:	62 17       	cp	r22, r18
 2b6:	73 07       	cpc	r23, r19
 2b8:	84 07       	cpc	r24, r20
 2ba:	38 f0       	brcs	.+14     	; 0x2ca <__divsf3_pse+0x26>
 2bc:	9f 5f       	subi	r25, 0xFF	; 255
 2be:	5f 4f       	sbci	r21, 0xFF	; 255
 2c0:	22 0f       	add	r18, r18
 2c2:	33 1f       	adc	r19, r19
 2c4:	44 1f       	adc	r20, r20
 2c6:	aa 1f       	adc	r26, r26
 2c8:	a9 f3       	breq	.-22     	; 0x2b4 <__divsf3_pse+0x10>
 2ca:	35 d0       	rcall	.+106    	; 0x336 <__divsf3_pse+0x92>
 2cc:	0e 2e       	mov	r0, r30
 2ce:	3a f0       	brmi	.+14     	; 0x2de <__divsf3_pse+0x3a>
 2d0:	e0 e8       	ldi	r30, 0x80	; 128
 2d2:	32 d0       	rcall	.+100    	; 0x338 <__divsf3_pse+0x94>
 2d4:	91 50       	subi	r25, 0x01	; 1
 2d6:	50 40       	sbci	r21, 0x00	; 0
 2d8:	e6 95       	lsr	r30
 2da:	00 1c       	adc	r0, r0
 2dc:	ca f7       	brpl	.-14     	; 0x2d0 <__divsf3_pse+0x2c>
 2de:	2b d0       	rcall	.+86     	; 0x336 <__divsf3_pse+0x92>
 2e0:	fe 2f       	mov	r31, r30
 2e2:	29 d0       	rcall	.+82     	; 0x336 <__divsf3_pse+0x92>
 2e4:	66 0f       	add	r22, r22
 2e6:	77 1f       	adc	r23, r23
 2e8:	88 1f       	adc	r24, r24
 2ea:	bb 1f       	adc	r27, r27
 2ec:	26 17       	cp	r18, r22
 2ee:	37 07       	cpc	r19, r23
 2f0:	48 07       	cpc	r20, r24
 2f2:	ab 07       	cpc	r26, r27
 2f4:	b0 e8       	ldi	r27, 0x80	; 128
 2f6:	09 f0       	breq	.+2      	; 0x2fa <__divsf3_pse+0x56>
 2f8:	bb 0b       	sbc	r27, r27
 2fa:	80 2d       	mov	r24, r0
 2fc:	bf 01       	movw	r22, r30
 2fe:	ff 27       	eor	r31, r31
 300:	93 58       	subi	r25, 0x83	; 131
 302:	5f 4f       	sbci	r21, 0xFF	; 255
 304:	3a f0       	brmi	.+14     	; 0x314 <__divsf3_pse+0x70>
 306:	9e 3f       	cpi	r25, 0xFE	; 254
 308:	51 05       	cpc	r21, r1
 30a:	78 f0       	brcs	.+30     	; 0x32a <__divsf3_pse+0x86>
 30c:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_inf>
 310:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__fp_szero>
 314:	5f 3f       	cpi	r21, 0xFF	; 255
 316:	e4 f3       	brlt	.-8      	; 0x310 <__divsf3_pse+0x6c>
 318:	98 3e       	cpi	r25, 0xE8	; 232
 31a:	d4 f3       	brlt	.-12     	; 0x310 <__divsf3_pse+0x6c>
 31c:	86 95       	lsr	r24
 31e:	77 95       	ror	r23
 320:	67 95       	ror	r22
 322:	b7 95       	ror	r27
 324:	f7 95       	ror	r31
 326:	9f 5f       	subi	r25, 0xFF	; 255
 328:	c9 f7       	brne	.-14     	; 0x31c <__divsf3_pse+0x78>
 32a:	88 0f       	add	r24, r24
 32c:	91 1d       	adc	r25, r1
 32e:	96 95       	lsr	r25
 330:	87 95       	ror	r24
 332:	97 f9       	bld	r25, 7
 334:	08 95       	ret
 336:	e1 e0       	ldi	r30, 0x01	; 1
 338:	66 0f       	add	r22, r22
 33a:	77 1f       	adc	r23, r23
 33c:	88 1f       	adc	r24, r24
 33e:	bb 1f       	adc	r27, r27
 340:	62 17       	cp	r22, r18
 342:	73 07       	cpc	r23, r19
 344:	84 07       	cpc	r24, r20
 346:	ba 07       	cpc	r27, r26
 348:	20 f0       	brcs	.+8      	; 0x352 <__divsf3_pse+0xae>
 34a:	62 1b       	sub	r22, r18
 34c:	73 0b       	sbc	r23, r19
 34e:	84 0b       	sbc	r24, r20
 350:	ba 0b       	sbc	r27, r26
 352:	ee 1f       	adc	r30, r30
 354:	88 f7       	brcc	.-30     	; 0x338 <__divsf3_pse+0x94>
 356:	e0 95       	com	r30
 358:	08 95       	ret

0000035a <__fixunssfsi>:
 35a:	0e 94 49 02 	call	0x492	; 0x492 <__fp_splitA>
 35e:	88 f0       	brcs	.+34     	; 0x382 <__fixunssfsi+0x28>
 360:	9f 57       	subi	r25, 0x7F	; 127
 362:	98 f0       	brcs	.+38     	; 0x38a <__fixunssfsi+0x30>
 364:	b9 2f       	mov	r27, r25
 366:	99 27       	eor	r25, r25
 368:	b7 51       	subi	r27, 0x17	; 23
 36a:	b0 f0       	brcs	.+44     	; 0x398 <__fixunssfsi+0x3e>
 36c:	e1 f0       	breq	.+56     	; 0x3a6 <__fixunssfsi+0x4c>
 36e:	66 0f       	add	r22, r22
 370:	77 1f       	adc	r23, r23
 372:	88 1f       	adc	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	1a f0       	brmi	.+6      	; 0x37e <__fixunssfsi+0x24>
 378:	ba 95       	dec	r27
 37a:	c9 f7       	brne	.-14     	; 0x36e <__fixunssfsi+0x14>
 37c:	14 c0       	rjmp	.+40     	; 0x3a6 <__fixunssfsi+0x4c>
 37e:	b1 30       	cpi	r27, 0x01	; 1
 380:	91 f0       	breq	.+36     	; 0x3a6 <__fixunssfsi+0x4c>
 382:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__fp_zero>
 386:	b1 e0       	ldi	r27, 0x01	; 1
 388:	08 95       	ret
 38a:	0c 94 63 02 	jmp	0x4c6	; 0x4c6 <__fp_zero>
 38e:	67 2f       	mov	r22, r23
 390:	78 2f       	mov	r23, r24
 392:	88 27       	eor	r24, r24
 394:	b8 5f       	subi	r27, 0xF8	; 248
 396:	39 f0       	breq	.+14     	; 0x3a6 <__fixunssfsi+0x4c>
 398:	b9 3f       	cpi	r27, 0xF9	; 249
 39a:	cc f3       	brlt	.-14     	; 0x38e <__fixunssfsi+0x34>
 39c:	86 95       	lsr	r24
 39e:	77 95       	ror	r23
 3a0:	67 95       	ror	r22
 3a2:	b3 95       	inc	r27
 3a4:	d9 f7       	brne	.-10     	; 0x39c <__fixunssfsi+0x42>
 3a6:	3e f4       	brtc	.+14     	; 0x3b6 <__fixunssfsi+0x5c>
 3a8:	90 95       	com	r25
 3aa:	80 95       	com	r24
 3ac:	70 95       	com	r23
 3ae:	61 95       	neg	r22
 3b0:	7f 4f       	sbci	r23, 0xFF	; 255
 3b2:	8f 4f       	sbci	r24, 0xFF	; 255
 3b4:	9f 4f       	sbci	r25, 0xFF	; 255
 3b6:	08 95       	ret

000003b8 <__floatunsisf>:
 3b8:	e8 94       	clt
 3ba:	09 c0       	rjmp	.+18     	; 0x3ce <__floatsisf+0x12>

000003bc <__floatsisf>:
 3bc:	97 fb       	bst	r25, 7
 3be:	3e f4       	brtc	.+14     	; 0x3ce <__floatsisf+0x12>
 3c0:	90 95       	com	r25
 3c2:	80 95       	com	r24
 3c4:	70 95       	com	r23
 3c6:	61 95       	neg	r22
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	99 23       	and	r25, r25
 3d0:	a9 f0       	breq	.+42     	; 0x3fc <__floatsisf+0x40>
 3d2:	f9 2f       	mov	r31, r25
 3d4:	96 e9       	ldi	r25, 0x96	; 150
 3d6:	bb 27       	eor	r27, r27
 3d8:	93 95       	inc	r25
 3da:	f6 95       	lsr	r31
 3dc:	87 95       	ror	r24
 3de:	77 95       	ror	r23
 3e0:	67 95       	ror	r22
 3e2:	b7 95       	ror	r27
 3e4:	f1 11       	cpse	r31, r1
 3e6:	f8 cf       	rjmp	.-16     	; 0x3d8 <__floatsisf+0x1c>
 3e8:	fa f4       	brpl	.+62     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3ea:	bb 0f       	add	r27, r27
 3ec:	11 f4       	brne	.+4      	; 0x3f2 <__floatsisf+0x36>
 3ee:	60 ff       	sbrs	r22, 0
 3f0:	1b c0       	rjmp	.+54     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3f2:	6f 5f       	subi	r22, 0xFF	; 255
 3f4:	7f 4f       	sbci	r23, 0xFF	; 255
 3f6:	8f 4f       	sbci	r24, 0xFF	; 255
 3f8:	9f 4f       	sbci	r25, 0xFF	; 255
 3fa:	16 c0       	rjmp	.+44     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 3fc:	88 23       	and	r24, r24
 3fe:	11 f0       	breq	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 400:	96 e9       	ldi	r25, 0x96	; 150
 402:	11 c0       	rjmp	.+34     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 404:	77 23       	and	r23, r23
 406:	21 f0       	breq	.+8      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 408:	9e e8       	ldi	r25, 0x8E	; 142
 40a:	87 2f       	mov	r24, r23
 40c:	76 2f       	mov	r23, r22
 40e:	05 c0       	rjmp	.+10     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 410:	66 23       	and	r22, r22
 412:	71 f0       	breq	.+28     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 414:	96 e8       	ldi	r25, 0x86	; 134
 416:	86 2f       	mov	r24, r22
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	60 e0       	ldi	r22, 0x00	; 0
 41c:	2a f0       	brmi	.+10     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 41e:	9a 95       	dec	r25
 420:	66 0f       	add	r22, r22
 422:	77 1f       	adc	r23, r23
 424:	88 1f       	adc	r24, r24
 426:	da f7       	brpl	.-10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 428:	88 0f       	add	r24, r24
 42a:	96 95       	lsr	r25
 42c:	87 95       	ror	r24
 42e:	97 f9       	bld	r25, 7
 430:	08 95       	ret

00000432 <__fp_inf>:
 432:	97 f9       	bld	r25, 7
 434:	9f 67       	ori	r25, 0x7F	; 127
 436:	80 e8       	ldi	r24, 0x80	; 128
 438:	70 e0       	ldi	r23, 0x00	; 0
 43a:	60 e0       	ldi	r22, 0x00	; 0
 43c:	08 95       	ret

0000043e <__fp_nan>:
 43e:	9f ef       	ldi	r25, 0xFF	; 255
 440:	80 ec       	ldi	r24, 0xC0	; 192
 442:	08 95       	ret

00000444 <__fp_pscA>:
 444:	00 24       	eor	r0, r0
 446:	0a 94       	dec	r0
 448:	16 16       	cp	r1, r22
 44a:	17 06       	cpc	r1, r23
 44c:	18 06       	cpc	r1, r24
 44e:	09 06       	cpc	r0, r25
 450:	08 95       	ret

00000452 <__fp_pscB>:
 452:	00 24       	eor	r0, r0
 454:	0a 94       	dec	r0
 456:	12 16       	cp	r1, r18
 458:	13 06       	cpc	r1, r19
 45a:	14 06       	cpc	r1, r20
 45c:	05 06       	cpc	r0, r21
 45e:	08 95       	ret

00000460 <__fp_round>:
 460:	09 2e       	mov	r0, r25
 462:	03 94       	inc	r0
 464:	00 0c       	add	r0, r0
 466:	11 f4       	brne	.+4      	; 0x46c <__fp_round+0xc>
 468:	88 23       	and	r24, r24
 46a:	52 f0       	brmi	.+20     	; 0x480 <__fp_round+0x20>
 46c:	bb 0f       	add	r27, r27
 46e:	40 f4       	brcc	.+16     	; 0x480 <__fp_round+0x20>
 470:	bf 2b       	or	r27, r31
 472:	11 f4       	brne	.+4      	; 0x478 <__fp_round+0x18>
 474:	60 ff       	sbrs	r22, 0
 476:	04 c0       	rjmp	.+8      	; 0x480 <__fp_round+0x20>
 478:	6f 5f       	subi	r22, 0xFF	; 255
 47a:	7f 4f       	sbci	r23, 0xFF	; 255
 47c:	8f 4f       	sbci	r24, 0xFF	; 255
 47e:	9f 4f       	sbci	r25, 0xFF	; 255
 480:	08 95       	ret

00000482 <__fp_split3>:
 482:	57 fd       	sbrc	r21, 7
 484:	90 58       	subi	r25, 0x80	; 128
 486:	44 0f       	add	r20, r20
 488:	55 1f       	adc	r21, r21
 48a:	59 f0       	breq	.+22     	; 0x4a2 <__fp_splitA+0x10>
 48c:	5f 3f       	cpi	r21, 0xFF	; 255
 48e:	71 f0       	breq	.+28     	; 0x4ac <__fp_splitA+0x1a>
 490:	47 95       	ror	r20

00000492 <__fp_splitA>:
 492:	88 0f       	add	r24, r24
 494:	97 fb       	bst	r25, 7
 496:	99 1f       	adc	r25, r25
 498:	61 f0       	breq	.+24     	; 0x4b2 <__fp_splitA+0x20>
 49a:	9f 3f       	cpi	r25, 0xFF	; 255
 49c:	79 f0       	breq	.+30     	; 0x4bc <__fp_splitA+0x2a>
 49e:	87 95       	ror	r24
 4a0:	08 95       	ret
 4a2:	12 16       	cp	r1, r18
 4a4:	13 06       	cpc	r1, r19
 4a6:	14 06       	cpc	r1, r20
 4a8:	55 1f       	adc	r21, r21
 4aa:	f2 cf       	rjmp	.-28     	; 0x490 <__fp_split3+0xe>
 4ac:	46 95       	lsr	r20
 4ae:	f1 df       	rcall	.-30     	; 0x492 <__fp_splitA>
 4b0:	08 c0       	rjmp	.+16     	; 0x4c2 <__fp_splitA+0x30>
 4b2:	16 16       	cp	r1, r22
 4b4:	17 06       	cpc	r1, r23
 4b6:	18 06       	cpc	r1, r24
 4b8:	99 1f       	adc	r25, r25
 4ba:	f1 cf       	rjmp	.-30     	; 0x49e <__fp_splitA+0xc>
 4bc:	86 95       	lsr	r24
 4be:	71 05       	cpc	r23, r1
 4c0:	61 05       	cpc	r22, r1
 4c2:	08 94       	sec
 4c4:	08 95       	ret

000004c6 <__fp_zero>:
 4c6:	e8 94       	clt

000004c8 <__fp_szero>:
 4c8:	bb 27       	eor	r27, r27
 4ca:	66 27       	eor	r22, r22
 4cc:	77 27       	eor	r23, r23
 4ce:	cb 01       	movw	r24, r22
 4d0:	97 f9       	bld	r25, 7
 4d2:	08 95       	ret

000004d4 <__mulsf3>:
 4d4:	0e 94 7d 02 	call	0x4fa	; 0x4fa <__mulsf3x>
 4d8:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_round>
 4dc:	0e 94 22 02 	call	0x444	; 0x444 <__fp_pscA>
 4e0:	38 f0       	brcs	.+14     	; 0x4f0 <__mulsf3+0x1c>
 4e2:	0e 94 29 02 	call	0x452	; 0x452 <__fp_pscB>
 4e6:	20 f0       	brcs	.+8      	; 0x4f0 <__mulsf3+0x1c>
 4e8:	95 23       	and	r25, r21
 4ea:	11 f0       	breq	.+4      	; 0x4f0 <__mulsf3+0x1c>
 4ec:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_inf>
 4f0:	0c 94 1f 02 	jmp	0x43e	; 0x43e <__fp_nan>
 4f4:	11 24       	eor	r1, r1
 4f6:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__fp_szero>

000004fa <__mulsf3x>:
 4fa:	0e 94 41 02 	call	0x482	; 0x482 <__fp_split3>
 4fe:	70 f3       	brcs	.-36     	; 0x4dc <__mulsf3+0x8>

00000500 <__mulsf3_pse>:
 500:	95 9f       	mul	r25, r21
 502:	c1 f3       	breq	.-16     	; 0x4f4 <__mulsf3+0x20>
 504:	95 0f       	add	r25, r21
 506:	50 e0       	ldi	r21, 0x00	; 0
 508:	55 1f       	adc	r21, r21
 50a:	62 9f       	mul	r22, r18
 50c:	f0 01       	movw	r30, r0
 50e:	72 9f       	mul	r23, r18
 510:	bb 27       	eor	r27, r27
 512:	f0 0d       	add	r31, r0
 514:	b1 1d       	adc	r27, r1
 516:	63 9f       	mul	r22, r19
 518:	aa 27       	eor	r26, r26
 51a:	f0 0d       	add	r31, r0
 51c:	b1 1d       	adc	r27, r1
 51e:	aa 1f       	adc	r26, r26
 520:	64 9f       	mul	r22, r20
 522:	66 27       	eor	r22, r22
 524:	b0 0d       	add	r27, r0
 526:	a1 1d       	adc	r26, r1
 528:	66 1f       	adc	r22, r22
 52a:	82 9f       	mul	r24, r18
 52c:	22 27       	eor	r18, r18
 52e:	b0 0d       	add	r27, r0
 530:	a1 1d       	adc	r26, r1
 532:	62 1f       	adc	r22, r18
 534:	73 9f       	mul	r23, r19
 536:	b0 0d       	add	r27, r0
 538:	a1 1d       	adc	r26, r1
 53a:	62 1f       	adc	r22, r18
 53c:	83 9f       	mul	r24, r19
 53e:	a0 0d       	add	r26, r0
 540:	61 1d       	adc	r22, r1
 542:	22 1f       	adc	r18, r18
 544:	74 9f       	mul	r23, r20
 546:	33 27       	eor	r19, r19
 548:	a0 0d       	add	r26, r0
 54a:	61 1d       	adc	r22, r1
 54c:	23 1f       	adc	r18, r19
 54e:	84 9f       	mul	r24, r20
 550:	60 0d       	add	r22, r0
 552:	21 1d       	adc	r18, r1
 554:	82 2f       	mov	r24, r18
 556:	76 2f       	mov	r23, r22
 558:	6a 2f       	mov	r22, r26
 55a:	11 24       	eor	r1, r1
 55c:	9f 57       	subi	r25, 0x7F	; 127
 55e:	50 40       	sbci	r21, 0x00	; 0
 560:	9a f0       	brmi	.+38     	; 0x588 <__mulsf3_pse+0x88>
 562:	f1 f0       	breq	.+60     	; 0x5a0 <__mulsf3_pse+0xa0>
 564:	88 23       	and	r24, r24
 566:	4a f0       	brmi	.+18     	; 0x57a <__mulsf3_pse+0x7a>
 568:	ee 0f       	add	r30, r30
 56a:	ff 1f       	adc	r31, r31
 56c:	bb 1f       	adc	r27, r27
 56e:	66 1f       	adc	r22, r22
 570:	77 1f       	adc	r23, r23
 572:	88 1f       	adc	r24, r24
 574:	91 50       	subi	r25, 0x01	; 1
 576:	50 40       	sbci	r21, 0x00	; 0
 578:	a9 f7       	brne	.-22     	; 0x564 <__mulsf3_pse+0x64>
 57a:	9e 3f       	cpi	r25, 0xFE	; 254
 57c:	51 05       	cpc	r21, r1
 57e:	80 f0       	brcs	.+32     	; 0x5a0 <__mulsf3_pse+0xa0>
 580:	0c 94 19 02 	jmp	0x432	; 0x432 <__fp_inf>
 584:	0c 94 64 02 	jmp	0x4c8	; 0x4c8 <__fp_szero>
 588:	5f 3f       	cpi	r21, 0xFF	; 255
 58a:	e4 f3       	brlt	.-8      	; 0x584 <__mulsf3_pse+0x84>
 58c:	98 3e       	cpi	r25, 0xE8	; 232
 58e:	d4 f3       	brlt	.-12     	; 0x584 <__mulsf3_pse+0x84>
 590:	86 95       	lsr	r24
 592:	77 95       	ror	r23
 594:	67 95       	ror	r22
 596:	b7 95       	ror	r27
 598:	f7 95       	ror	r31
 59a:	e7 95       	ror	r30
 59c:	9f 5f       	subi	r25, 0xFF	; 255
 59e:	c1 f7       	brne	.-16     	; 0x590 <__mulsf3_pse+0x90>
 5a0:	fe 2b       	or	r31, r30
 5a2:	88 0f       	add	r24, r24
 5a4:	91 1d       	adc	r25, r1
 5a6:	96 95       	lsr	r25
 5a8:	87 95       	ror	r24
 5aa:	97 f9       	bld	r25, 7
 5ac:	08 95       	ret

000005ae <__tablejump2__>:
 5ae:	ee 0f       	add	r30, r30
 5b0:	ff 1f       	adc	r31, r31
 5b2:	05 90       	lpm	r0, Z+
 5b4:	f4 91       	lpm	r31, Z
 5b6:	e0 2d       	mov	r30, r0
 5b8:	09 94       	ijmp

000005ba <_exit>:
 5ba:	f8 94       	cli

000005bc <__stop_program>:
 5bc:	ff cf       	rjmp	.-2      	; 0x5bc <__stop_program>
