
Smart Home Project.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000059e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000005f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000005f2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000624  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000e0  00000000  00000000  00000660  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bfe  00000000  00000000  00000740  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007bf  00000000  00000000  0000133e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005ed  00000000  00000000  00001afd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001a4  00000000  00000000  000020ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000046a  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003e2  00000000  00000000  000026fa  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  00002adc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 31 00 	jmp	0x62	; 0x62 <__ctors_end>
   4:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
   8:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
   c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  10:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  14:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  18:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  1c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  20:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  24:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  28:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  2c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  30:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  34:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  38:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  3c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  40:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  44:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  48:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  4c:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  50:	0c 94 3b 00 	jmp	0x76	; 0x76 <__bad_interrupt>
  54:	64 00       	.word	0x0064	; ????
  56:	68 00       	.word	0x0068	; ????
  58:	6d 00       	.word	0x006d	; ????
  5a:	6f 00       	.word	0x006f	; ????
  5c:	73 00       	.word	0x0073	; ????
  5e:	77 00       	.word	0x0077	; ????
  60:	79 00       	.word	0x0079	; ????

00000062 <__ctors_end>:
  62:	11 24       	eor	r1, r1
  64:	1f be       	out	0x3f, r1	; 63
  66:	cf e5       	ldi	r28, 0x5F	; 95
  68:	d8 e0       	ldi	r29, 0x08	; 8
  6a:	de bf       	out	0x3e, r29	; 62
  6c:	cd bf       	out	0x3d, r28	; 61
  6e:	0e 94 3d 00 	call	0x7a	; 0x7a <main>
  72:	0c 94 cd 02 	jmp	0x59a	; 0x59a <_exit>

00000076 <__bad_interrupt>:
  76:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007a <main>:

int main(void)
{
    /* Replace with your application code */
	char x ;
	init_uart(9600);
  7a:	80 e8       	ldi	r24, 0x80	; 128
  7c:	95 e2       	ldi	r25, 0x25	; 37
  7e:	0e 94 b4 00 	call	0x168	; 0x168 <init_uart>
	SPI_init(master);
  82:	86 e0       	ldi	r24, 0x06	; 6
  84:	90 e0       	ldi	r25, 0x00	; 0
  86:	0e 94 7d 00 	call	0xfa	; 0xfa <SPI_init>
	SPI_clock(fosc128);
  8a:	84 e0       	ldi	r24, 0x04	; 4
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	0e 94 5b 00 	call	0xb6	; 0xb6 <SPI_clock>
	SPI_enable(enable);	
  92:	80 e0       	ldi	r24, 0x00	; 0
  94:	90 e0       	ldi	r25, 0x00	; 0
  96:	0e 94 52 00 	call	0xa4	; 0xa4 <SPI_enable>
	
    while (1) 
    {
		x = uart_receive_char();
  9a:	0e 94 ba 00 	call	0x174	; 0x174 <uart_receive_char>
		spI_write(x);
  9e:	0e 94 8f 00 	call	0x11e	; 0x11e <spI_write>
  a2:	fb cf       	rjmp	.-10     	; 0x9a <main+0x20>

000000a4 <SPI_enable>:


char spI_read(){                      // call this function to receive data
		while(!(SPSR &(1<<SPIF)));
		return SPDR;
}
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	19 f0       	breq	.+6      	; 0xae <SPI_enable+0xa>
  a8:	01 97       	sbiw	r24, 0x01	; 1
  aa:	19 f0       	breq	.+6      	; 0xb2 <SPI_enable+0xe>
  ac:	08 95       	ret
  ae:	6e 9a       	sbi	0x0d, 6	; 13
  b0:	08 95       	ret
  b2:	6e 98       	cbi	0x0d, 6	; 13
  b4:	08 95       	ret

000000b6 <SPI_clock>:
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	87 30       	cpi	r24, 0x07	; 7
  ba:	91 05       	cpc	r25, r1
  bc:	e8 f4       	brcc	.+58     	; 0xf8 <SPI_clock+0x42>
  be:	86 5d       	subi	r24, 0xD6	; 214
  c0:	9f 4f       	sbci	r25, 0xFF	; 255
  c2:	fc 01       	movw	r30, r24
  c4:	0c 94 c7 02 	jmp	0x58e	; 0x58e <__tablejump2__>
  c8:	8d b1       	in	r24, 0x0d	; 13
  ca:	8c 7f       	andi	r24, 0xFC	; 252
  cc:	8d b9       	out	0x0d, r24	; 13
  ce:	08 95       	ret
  d0:	68 9a       	sbi	0x0d, 0	; 13
  d2:	8d b1       	in	r24, 0x0d	; 13
  d4:	8c 7f       	andi	r24, 0xFC	; 252
  d6:	8d b9       	out	0x0d, r24	; 13
  d8:	08 95       	ret
  da:	68 98       	cbi	0x0d, 0	; 13
  dc:	69 9a       	sbi	0x0d, 1	; 13
  de:	8d b1       	in	r24, 0x0d	; 13
  e0:	83 60       	ori	r24, 0x03	; 3
  e2:	8d b9       	out	0x0d, r24	; 13
  e4:	70 98       	cbi	0x0e, 0	; 14
  e6:	8d b1       	in	r24, 0x0d	; 13
  e8:	8c 7f       	andi	r24, 0xFC	; 252
  ea:	8d b9       	out	0x0d, r24	; 13
  ec:	68 9a       	sbi	0x0d, 0	; 13
  ee:	68 9a       	sbi	0x0d, 0	; 13
  f0:	69 98       	cbi	0x0d, 1	; 13
  f2:	8d b1       	in	r24, 0x0d	; 13
  f4:	83 60       	ori	r24, 0x03	; 3
  f6:	8d b9       	out	0x0d, r24	; 13
  f8:	08 95       	ret

000000fa <SPI_init>:
  fa:	86 30       	cpi	r24, 0x06	; 6
  fc:	91 05       	cpc	r25, r1
  fe:	19 f0       	breq	.+6      	; 0x106 <SPI_init+0xc>
 100:	07 97       	sbiw	r24, 0x07	; 7
 102:	39 f0       	breq	.+14     	; 0x112 <SPI_init+0x18>
 104:	08 95       	ret
 106:	6c 9a       	sbi	0x0d, 4	; 13
 108:	87 b3       	in	r24, 0x17	; 23
 10a:	80 6b       	ori	r24, 0xB0	; 176
 10c:	87 bb       	out	0x17, r24	; 23
 10e:	be 98       	cbi	0x17, 6	; 23
 110:	08 95       	ret
 112:	6c 98       	cbi	0x0d, 4	; 13
 114:	bd 98       	cbi	0x17, 5	; 23
 116:	bc 98       	cbi	0x17, 4	; 23
 118:	bf 98       	cbi	0x17, 7	; 23
 11a:	be 9a       	sbi	0x17, 6	; 23
 11c:	08 95       	ret

0000011e <spI_write>:

void spI_write(char data){           // call this function to transmit data
	   SPDR = data;
 11e:	8f b9       	out	0x0f, r24	; 15
 	   while(!(SPSR &(1<<SPIF)));    // looping to check if data register can transmit data
 120:	77 9b       	sbis	0x0e, 7	; 14
 122:	fe cf       	rjmp	.-4      	; 0x120 <spI_write+0x2>

 124:	08 95       	ret

00000126 <uart_setBaudrate>:
	char buff[11];
	itoa(num , buff , 10);   // to convert the number to string  
	uart_send_str(buff);    // calling this function to send the number
}
void uart_newline(){
	uart_send_char('\r');  // call this function to go to New Line to write on it
 126:	bc 01       	movw	r22, r24
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 cc 01 	call	0x398	; 0x398 <__floatunsisf>
 130:	20 e0       	ldi	r18, 0x00	; 0
 132:	30 e0       	ldi	r19, 0x00	; 0
 134:	40 e8       	ldi	r20, 0x80	; 128
 136:	51 e4       	ldi	r21, 0x41	; 65
 138:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <__mulsf3>
 13c:	9b 01       	movw	r18, r22
 13e:	ac 01       	movw	r20, r24
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	74 e2       	ldi	r23, 0x24	; 36
 144:	84 e7       	ldi	r24, 0x74	; 116
 146:	9b e4       	ldi	r25, 0x4B	; 75
 148:	0e 94 2b 01 	call	0x256	; 0x256 <__divsf3>
 14c:	20 e0       	ldi	r18, 0x00	; 0
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 e8       	ldi	r20, 0x80	; 128
 152:	5f e3       	ldi	r21, 0x3F	; 63
 154:	0e 94 be 00 	call	0x17c	; 0x17c <__subsf3>
 158:	0e 94 9d 01 	call	0x33a	; 0x33a <__fixunssfsi>
 15c:	69 b9       	out	0x09, r22	; 9
 15e:	80 b5       	in	r24, 0x20	; 32
 160:	8f 77       	andi	r24, 0x7F	; 127
 162:	80 bd       	out	0x20, r24	; 32
 164:	70 bd       	out	0x20, r23	; 32
 166:	08 95       	ret

00000168 <init_uart>:
 168:	0e 94 93 00 	call	0x126	; 0x126 <uart_setBaudrate>
 16c:	8a b1       	in	r24, 0x0a	; 10
 16e:	88 61       	ori	r24, 0x18	; 24
 170:	8a b9       	out	0x0a, r24	; 10
 172:	08 95       	ret

00000174 <uart_receive_char>:


//receive section

char uart_receive_char(){
	while (!(UCSRA & (1 << RXC)));    // looping to check if data is ready to receive the character 
 174:	5f 9b       	sbis	0x0b, 7	; 11
 176:	fe cf       	rjmp	.-4      	; 0x174 <uart_receive_char>
	return UDR;
 178:	8c b1       	in	r24, 0x0c	; 12
}
 17a:	08 95       	ret

0000017c <__subsf3>:
 17c:	50 58       	subi	r21, 0x80	; 128

0000017e <__addsf3>:
 17e:	bb 27       	eor	r27, r27
 180:	aa 27       	eor	r26, r26
 182:	0e 94 d6 00 	call	0x1ac	; 0x1ac <__addsf3x>
 186:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_round>
 18a:	0e 94 12 02 	call	0x424	; 0x424 <__fp_pscA>
 18e:	38 f0       	brcs	.+14     	; 0x19e <__addsf3+0x20>
 190:	0e 94 19 02 	call	0x432	; 0x432 <__fp_pscB>
 194:	20 f0       	brcs	.+8      	; 0x19e <__addsf3+0x20>
 196:	39 f4       	brne	.+14     	; 0x1a6 <__addsf3+0x28>
 198:	9f 3f       	cpi	r25, 0xFF	; 255
 19a:	19 f4       	brne	.+6      	; 0x1a2 <__addsf3+0x24>
 19c:	26 f4       	brtc	.+8      	; 0x1a6 <__addsf3+0x28>
 19e:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_nan>
 1a2:	0e f4       	brtc	.+2      	; 0x1a6 <__addsf3+0x28>
 1a4:	e0 95       	com	r30
 1a6:	e7 fb       	bst	r30, 7
 1a8:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>

000001ac <__addsf3x>:
 1ac:	e9 2f       	mov	r30, r25
 1ae:	0e 94 31 02 	call	0x462	; 0x462 <__fp_split3>
 1b2:	58 f3       	brcs	.-42     	; 0x18a <__addsf3+0xc>
 1b4:	ba 17       	cp	r27, r26
 1b6:	62 07       	cpc	r22, r18
 1b8:	73 07       	cpc	r23, r19
 1ba:	84 07       	cpc	r24, r20
 1bc:	95 07       	cpc	r25, r21
 1be:	20 f0       	brcs	.+8      	; 0x1c8 <__addsf3x+0x1c>
 1c0:	79 f4       	brne	.+30     	; 0x1e0 <__addsf3x+0x34>
 1c2:	a6 f5       	brtc	.+104    	; 0x22c <__addsf3x+0x80>
 1c4:	0c 94 53 02 	jmp	0x4a6	; 0x4a6 <__fp_zero>
 1c8:	0e f4       	brtc	.+2      	; 0x1cc <__addsf3x+0x20>
 1ca:	e0 95       	com	r30
 1cc:	0b 2e       	mov	r0, r27
 1ce:	ba 2f       	mov	r27, r26
 1d0:	a0 2d       	mov	r26, r0
 1d2:	0b 01       	movw	r0, r22
 1d4:	b9 01       	movw	r22, r18
 1d6:	90 01       	movw	r18, r0
 1d8:	0c 01       	movw	r0, r24
 1da:	ca 01       	movw	r24, r20
 1dc:	a0 01       	movw	r20, r0
 1de:	11 24       	eor	r1, r1
 1e0:	ff 27       	eor	r31, r31
 1e2:	59 1b       	sub	r21, r25
 1e4:	99 f0       	breq	.+38     	; 0x20c <__addsf3x+0x60>
 1e6:	59 3f       	cpi	r21, 0xF9	; 249
 1e8:	50 f4       	brcc	.+20     	; 0x1fe <__addsf3x+0x52>
 1ea:	50 3e       	cpi	r21, 0xE0	; 224
 1ec:	68 f1       	brcs	.+90     	; 0x248 <__addsf3x+0x9c>
 1ee:	1a 16       	cp	r1, r26
 1f0:	f0 40       	sbci	r31, 0x00	; 0
 1f2:	a2 2f       	mov	r26, r18
 1f4:	23 2f       	mov	r18, r19
 1f6:	34 2f       	mov	r19, r20
 1f8:	44 27       	eor	r20, r20
 1fa:	58 5f       	subi	r21, 0xF8	; 248
 1fc:	f3 cf       	rjmp	.-26     	; 0x1e4 <__addsf3x+0x38>
 1fe:	46 95       	lsr	r20
 200:	37 95       	ror	r19
 202:	27 95       	ror	r18
 204:	a7 95       	ror	r26
 206:	f0 40       	sbci	r31, 0x00	; 0
 208:	53 95       	inc	r21
 20a:	c9 f7       	brne	.-14     	; 0x1fe <__addsf3x+0x52>
 20c:	7e f4       	brtc	.+30     	; 0x22c <__addsf3x+0x80>
 20e:	1f 16       	cp	r1, r31
 210:	ba 0b       	sbc	r27, r26
 212:	62 0b       	sbc	r22, r18
 214:	73 0b       	sbc	r23, r19
 216:	84 0b       	sbc	r24, r20
 218:	ba f0       	brmi	.+46     	; 0x248 <__addsf3x+0x9c>
 21a:	91 50       	subi	r25, 0x01	; 1
 21c:	a1 f0       	breq	.+40     	; 0x246 <__addsf3x+0x9a>
 21e:	ff 0f       	add	r31, r31
 220:	bb 1f       	adc	r27, r27
 222:	66 1f       	adc	r22, r22
 224:	77 1f       	adc	r23, r23
 226:	88 1f       	adc	r24, r24
 228:	c2 f7       	brpl	.-16     	; 0x21a <__addsf3x+0x6e>
 22a:	0e c0       	rjmp	.+28     	; 0x248 <__addsf3x+0x9c>
 22c:	ba 0f       	add	r27, r26
 22e:	62 1f       	adc	r22, r18
 230:	73 1f       	adc	r23, r19
 232:	84 1f       	adc	r24, r20
 234:	48 f4       	brcc	.+18     	; 0x248 <__addsf3x+0x9c>
 236:	87 95       	ror	r24
 238:	77 95       	ror	r23
 23a:	67 95       	ror	r22
 23c:	b7 95       	ror	r27
 23e:	f7 95       	ror	r31
 240:	9e 3f       	cpi	r25, 0xFE	; 254
 242:	08 f0       	brcs	.+2      	; 0x246 <__addsf3x+0x9a>
 244:	b0 cf       	rjmp	.-160    	; 0x1a6 <__addsf3+0x28>
 246:	93 95       	inc	r25
 248:	88 0f       	add	r24, r24
 24a:	08 f0       	brcs	.+2      	; 0x24e <__addsf3x+0xa2>
 24c:	99 27       	eor	r25, r25
 24e:	ee 0f       	add	r30, r30
 250:	97 95       	ror	r25
 252:	87 95       	ror	r24
 254:	08 95       	ret

00000256 <__divsf3>:
 256:	0e 94 3f 01 	call	0x27e	; 0x27e <__divsf3x>
 25a:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_round>
 25e:	0e 94 19 02 	call	0x432	; 0x432 <__fp_pscB>
 262:	58 f0       	brcs	.+22     	; 0x27a <__divsf3+0x24>
 264:	0e 94 12 02 	call	0x424	; 0x424 <__fp_pscA>
 268:	40 f0       	brcs	.+16     	; 0x27a <__divsf3+0x24>
 26a:	29 f4       	brne	.+10     	; 0x276 <__divsf3+0x20>
 26c:	5f 3f       	cpi	r21, 0xFF	; 255
 26e:	29 f0       	breq	.+10     	; 0x27a <__divsf3+0x24>
 270:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>
 274:	51 11       	cpse	r21, r1
 276:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_szero>
 27a:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_nan>

0000027e <__divsf3x>:
 27e:	0e 94 31 02 	call	0x462	; 0x462 <__fp_split3>
 282:	68 f3       	brcs	.-38     	; 0x25e <__divsf3+0x8>

00000284 <__divsf3_pse>:
 284:	99 23       	and	r25, r25
 286:	b1 f3       	breq	.-20     	; 0x274 <__divsf3+0x1e>
 288:	55 23       	and	r21, r21
 28a:	91 f3       	breq	.-28     	; 0x270 <__divsf3+0x1a>
 28c:	95 1b       	sub	r25, r21
 28e:	55 0b       	sbc	r21, r21
 290:	bb 27       	eor	r27, r27
 292:	aa 27       	eor	r26, r26
 294:	62 17       	cp	r22, r18
 296:	73 07       	cpc	r23, r19
 298:	84 07       	cpc	r24, r20
 29a:	38 f0       	brcs	.+14     	; 0x2aa <__divsf3_pse+0x26>
 29c:	9f 5f       	subi	r25, 0xFF	; 255
 29e:	5f 4f       	sbci	r21, 0xFF	; 255
 2a0:	22 0f       	add	r18, r18
 2a2:	33 1f       	adc	r19, r19
 2a4:	44 1f       	adc	r20, r20
 2a6:	aa 1f       	adc	r26, r26
 2a8:	a9 f3       	breq	.-22     	; 0x294 <__divsf3_pse+0x10>
 2aa:	35 d0       	rcall	.+106    	; 0x316 <__divsf3_pse+0x92>
 2ac:	0e 2e       	mov	r0, r30
 2ae:	3a f0       	brmi	.+14     	; 0x2be <__divsf3_pse+0x3a>
 2b0:	e0 e8       	ldi	r30, 0x80	; 128
 2b2:	32 d0       	rcall	.+100    	; 0x318 <__divsf3_pse+0x94>
 2b4:	91 50       	subi	r25, 0x01	; 1
 2b6:	50 40       	sbci	r21, 0x00	; 0
 2b8:	e6 95       	lsr	r30
 2ba:	00 1c       	adc	r0, r0
 2bc:	ca f7       	brpl	.-14     	; 0x2b0 <__divsf3_pse+0x2c>
 2be:	2b d0       	rcall	.+86     	; 0x316 <__divsf3_pse+0x92>
 2c0:	fe 2f       	mov	r31, r30
 2c2:	29 d0       	rcall	.+82     	; 0x316 <__divsf3_pse+0x92>
 2c4:	66 0f       	add	r22, r22
 2c6:	77 1f       	adc	r23, r23
 2c8:	88 1f       	adc	r24, r24
 2ca:	bb 1f       	adc	r27, r27
 2cc:	26 17       	cp	r18, r22
 2ce:	37 07       	cpc	r19, r23
 2d0:	48 07       	cpc	r20, r24
 2d2:	ab 07       	cpc	r26, r27
 2d4:	b0 e8       	ldi	r27, 0x80	; 128
 2d6:	09 f0       	breq	.+2      	; 0x2da <__divsf3_pse+0x56>
 2d8:	bb 0b       	sbc	r27, r27
 2da:	80 2d       	mov	r24, r0
 2dc:	bf 01       	movw	r22, r30
 2de:	ff 27       	eor	r31, r31
 2e0:	93 58       	subi	r25, 0x83	; 131
 2e2:	5f 4f       	sbci	r21, 0xFF	; 255
 2e4:	3a f0       	brmi	.+14     	; 0x2f4 <__divsf3_pse+0x70>
 2e6:	9e 3f       	cpi	r25, 0xFE	; 254
 2e8:	51 05       	cpc	r21, r1
 2ea:	78 f0       	brcs	.+30     	; 0x30a <__divsf3_pse+0x86>
 2ec:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>
 2f0:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_szero>
 2f4:	5f 3f       	cpi	r21, 0xFF	; 255
 2f6:	e4 f3       	brlt	.-8      	; 0x2f0 <__divsf3_pse+0x6c>
 2f8:	98 3e       	cpi	r25, 0xE8	; 232
 2fa:	d4 f3       	brlt	.-12     	; 0x2f0 <__divsf3_pse+0x6c>
 2fc:	86 95       	lsr	r24
 2fe:	77 95       	ror	r23
 300:	67 95       	ror	r22
 302:	b7 95       	ror	r27
 304:	f7 95       	ror	r31
 306:	9f 5f       	subi	r25, 0xFF	; 255
 308:	c9 f7       	brne	.-14     	; 0x2fc <__divsf3_pse+0x78>
 30a:	88 0f       	add	r24, r24
 30c:	91 1d       	adc	r25, r1
 30e:	96 95       	lsr	r25
 310:	87 95       	ror	r24
 312:	97 f9       	bld	r25, 7
 314:	08 95       	ret
 316:	e1 e0       	ldi	r30, 0x01	; 1
 318:	66 0f       	add	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	88 1f       	adc	r24, r24
 31e:	bb 1f       	adc	r27, r27
 320:	62 17       	cp	r22, r18
 322:	73 07       	cpc	r23, r19
 324:	84 07       	cpc	r24, r20
 326:	ba 07       	cpc	r27, r26
 328:	20 f0       	brcs	.+8      	; 0x332 <__divsf3_pse+0xae>
 32a:	62 1b       	sub	r22, r18
 32c:	73 0b       	sbc	r23, r19
 32e:	84 0b       	sbc	r24, r20
 330:	ba 0b       	sbc	r27, r26
 332:	ee 1f       	adc	r30, r30
 334:	88 f7       	brcc	.-30     	; 0x318 <__divsf3_pse+0x94>
 336:	e0 95       	com	r30
 338:	08 95       	ret

0000033a <__fixunssfsi>:
 33a:	0e 94 39 02 	call	0x472	; 0x472 <__fp_splitA>
 33e:	88 f0       	brcs	.+34     	; 0x362 <__fixunssfsi+0x28>
 340:	9f 57       	subi	r25, 0x7F	; 127
 342:	98 f0       	brcs	.+38     	; 0x36a <__fixunssfsi+0x30>
 344:	b9 2f       	mov	r27, r25
 346:	99 27       	eor	r25, r25
 348:	b7 51       	subi	r27, 0x17	; 23
 34a:	b0 f0       	brcs	.+44     	; 0x378 <__fixunssfsi+0x3e>
 34c:	e1 f0       	breq	.+56     	; 0x386 <__fixunssfsi+0x4c>
 34e:	66 0f       	add	r22, r22
 350:	77 1f       	adc	r23, r23
 352:	88 1f       	adc	r24, r24
 354:	99 1f       	adc	r25, r25
 356:	1a f0       	brmi	.+6      	; 0x35e <__fixunssfsi+0x24>
 358:	ba 95       	dec	r27
 35a:	c9 f7       	brne	.-14     	; 0x34e <__fixunssfsi+0x14>
 35c:	14 c0       	rjmp	.+40     	; 0x386 <__fixunssfsi+0x4c>
 35e:	b1 30       	cpi	r27, 0x01	; 1
 360:	91 f0       	breq	.+36     	; 0x386 <__fixunssfsi+0x4c>
 362:	0e 94 53 02 	call	0x4a6	; 0x4a6 <__fp_zero>
 366:	b1 e0       	ldi	r27, 0x01	; 1
 368:	08 95       	ret
 36a:	0c 94 53 02 	jmp	0x4a6	; 0x4a6 <__fp_zero>
 36e:	67 2f       	mov	r22, r23
 370:	78 2f       	mov	r23, r24
 372:	88 27       	eor	r24, r24
 374:	b8 5f       	subi	r27, 0xF8	; 248
 376:	39 f0       	breq	.+14     	; 0x386 <__fixunssfsi+0x4c>
 378:	b9 3f       	cpi	r27, 0xF9	; 249
 37a:	cc f3       	brlt	.-14     	; 0x36e <__fixunssfsi+0x34>
 37c:	86 95       	lsr	r24
 37e:	77 95       	ror	r23
 380:	67 95       	ror	r22
 382:	b3 95       	inc	r27
 384:	d9 f7       	brne	.-10     	; 0x37c <__fixunssfsi+0x42>
 386:	3e f4       	brtc	.+14     	; 0x396 <__fixunssfsi+0x5c>
 388:	90 95       	com	r25
 38a:	80 95       	com	r24
 38c:	70 95       	com	r23
 38e:	61 95       	neg	r22
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	8f 4f       	sbci	r24, 0xFF	; 255
 394:	9f 4f       	sbci	r25, 0xFF	; 255
 396:	08 95       	ret

00000398 <__floatunsisf>:
 398:	e8 94       	clt
 39a:	09 c0       	rjmp	.+18     	; 0x3ae <__floatsisf+0x12>

0000039c <__floatsisf>:
 39c:	97 fb       	bst	r25, 7
 39e:	3e f4       	brtc	.+14     	; 0x3ae <__floatsisf+0x12>
 3a0:	90 95       	com	r25
 3a2:	80 95       	com	r24
 3a4:	70 95       	com	r23
 3a6:	61 95       	neg	r22
 3a8:	7f 4f       	sbci	r23, 0xFF	; 255
 3aa:	8f 4f       	sbci	r24, 0xFF	; 255
 3ac:	9f 4f       	sbci	r25, 0xFF	; 255
 3ae:	99 23       	and	r25, r25
 3b0:	a9 f0       	breq	.+42     	; 0x3dc <__floatsisf+0x40>
 3b2:	f9 2f       	mov	r31, r25
 3b4:	96 e9       	ldi	r25, 0x96	; 150
 3b6:	bb 27       	eor	r27, r27
 3b8:	93 95       	inc	r25
 3ba:	f6 95       	lsr	r31
 3bc:	87 95       	ror	r24
 3be:	77 95       	ror	r23
 3c0:	67 95       	ror	r22
 3c2:	b7 95       	ror	r27
 3c4:	f1 11       	cpse	r31, r1
 3c6:	f8 cf       	rjmp	.-16     	; 0x3b8 <__floatsisf+0x1c>
 3c8:	fa f4       	brpl	.+62     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3ca:	bb 0f       	add	r27, r27
 3cc:	11 f4       	brne	.+4      	; 0x3d2 <__floatsisf+0x36>
 3ce:	60 ff       	sbrs	r22, 0
 3d0:	1b c0       	rjmp	.+54     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3d2:	6f 5f       	subi	r22, 0xFF	; 255
 3d4:	7f 4f       	sbci	r23, 0xFF	; 255
 3d6:	8f 4f       	sbci	r24, 0xFF	; 255
 3d8:	9f 4f       	sbci	r25, 0xFF	; 255
 3da:	16 c0       	rjmp	.+44     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3dc:	88 23       	and	r24, r24
 3de:	11 f0       	breq	.+4      	; 0x3e4 <__floatsisf+0x48>
 3e0:	96 e9       	ldi	r25, 0x96	; 150
 3e2:	11 c0       	rjmp	.+34     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e4:	77 23       	and	r23, r23
 3e6:	21 f0       	breq	.+8      	; 0x3f0 <__floatsisf+0x54>
 3e8:	9e e8       	ldi	r25, 0x8E	; 142
 3ea:	87 2f       	mov	r24, r23
 3ec:	76 2f       	mov	r23, r22
 3ee:	05 c0       	rjmp	.+10     	; 0x3fa <__floatsisf+0x5e>
 3f0:	66 23       	and	r22, r22
 3f2:	71 f0       	breq	.+28     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 3f4:	96 e8       	ldi	r25, 0x86	; 134
 3f6:	86 2f       	mov	r24, r22
 3f8:	70 e0       	ldi	r23, 0x00	; 0
 3fa:	60 e0       	ldi	r22, 0x00	; 0
 3fc:	2a f0       	brmi	.+10     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3fe:	9a 95       	dec	r25
 400:	66 0f       	add	r22, r22
 402:	77 1f       	adc	r23, r23
 404:	88 1f       	adc	r24, r24
 406:	da f7       	brpl	.-10     	; 0x3fe <__floatsisf+0x62>
 408:	88 0f       	add	r24, r24
 40a:	96 95       	lsr	r25
 40c:	87 95       	ror	r24
 40e:	97 f9       	bld	r25, 7
 410:	08 95       	ret

00000412 <__fp_inf>:
 412:	97 f9       	bld	r25, 7
 414:	9f 67       	ori	r25, 0x7F	; 127
 416:	80 e8       	ldi	r24, 0x80	; 128
 418:	70 e0       	ldi	r23, 0x00	; 0
 41a:	60 e0       	ldi	r22, 0x00	; 0
 41c:	08 95       	ret

0000041e <__fp_nan>:
 41e:	9f ef       	ldi	r25, 0xFF	; 255
 420:	80 ec       	ldi	r24, 0xC0	; 192
 422:	08 95       	ret

00000424 <__fp_pscA>:
 424:	00 24       	eor	r0, r0
 426:	0a 94       	dec	r0
 428:	16 16       	cp	r1, r22
 42a:	17 06       	cpc	r1, r23
 42c:	18 06       	cpc	r1, r24
 42e:	09 06       	cpc	r0, r25
 430:	08 95       	ret

00000432 <__fp_pscB>:
 432:	00 24       	eor	r0, r0
 434:	0a 94       	dec	r0
 436:	12 16       	cp	r1, r18
 438:	13 06       	cpc	r1, r19
 43a:	14 06       	cpc	r1, r20
 43c:	05 06       	cpc	r0, r21
 43e:	08 95       	ret

00000440 <__fp_round>:
 440:	09 2e       	mov	r0, r25
 442:	03 94       	inc	r0
 444:	00 0c       	add	r0, r0
 446:	11 f4       	brne	.+4      	; 0x44c <__fp_round+0xc>
 448:	88 23       	and	r24, r24
 44a:	52 f0       	brmi	.+20     	; 0x460 <__fp_round+0x20>
 44c:	bb 0f       	add	r27, r27
 44e:	40 f4       	brcc	.+16     	; 0x460 <__fp_round+0x20>
 450:	bf 2b       	or	r27, r31
 452:	11 f4       	brne	.+4      	; 0x458 <__fp_round+0x18>
 454:	60 ff       	sbrs	r22, 0
 456:	04 c0       	rjmp	.+8      	; 0x460 <__fp_round+0x20>
 458:	6f 5f       	subi	r22, 0xFF	; 255
 45a:	7f 4f       	sbci	r23, 0xFF	; 255
 45c:	8f 4f       	sbci	r24, 0xFF	; 255
 45e:	9f 4f       	sbci	r25, 0xFF	; 255
 460:	08 95       	ret

00000462 <__fp_split3>:
 462:	57 fd       	sbrc	r21, 7
 464:	90 58       	subi	r25, 0x80	; 128
 466:	44 0f       	add	r20, r20
 468:	55 1f       	adc	r21, r21
 46a:	59 f0       	breq	.+22     	; 0x482 <__fp_splitA+0x10>
 46c:	5f 3f       	cpi	r21, 0xFF	; 255
 46e:	71 f0       	breq	.+28     	; 0x48c <__fp_splitA+0x1a>
 470:	47 95       	ror	r20

00000472 <__fp_splitA>:
 472:	88 0f       	add	r24, r24
 474:	97 fb       	bst	r25, 7
 476:	99 1f       	adc	r25, r25
 478:	61 f0       	breq	.+24     	; 0x492 <__fp_splitA+0x20>
 47a:	9f 3f       	cpi	r25, 0xFF	; 255
 47c:	79 f0       	breq	.+30     	; 0x49c <__fp_splitA+0x2a>
 47e:	87 95       	ror	r24
 480:	08 95       	ret
 482:	12 16       	cp	r1, r18
 484:	13 06       	cpc	r1, r19
 486:	14 06       	cpc	r1, r20
 488:	55 1f       	adc	r21, r21
 48a:	f2 cf       	rjmp	.-28     	; 0x470 <__fp_split3+0xe>
 48c:	46 95       	lsr	r20
 48e:	f1 df       	rcall	.-30     	; 0x472 <__fp_splitA>
 490:	08 c0       	rjmp	.+16     	; 0x4a2 <__fp_splitA+0x30>
 492:	16 16       	cp	r1, r22
 494:	17 06       	cpc	r1, r23
 496:	18 06       	cpc	r1, r24
 498:	99 1f       	adc	r25, r25
 49a:	f1 cf       	rjmp	.-30     	; 0x47e <__fp_splitA+0xc>
 49c:	86 95       	lsr	r24
 49e:	71 05       	cpc	r23, r1
 4a0:	61 05       	cpc	r22, r1
 4a2:	08 94       	sec
 4a4:	08 95       	ret

000004a6 <__fp_zero>:
 4a6:	e8 94       	clt

000004a8 <__fp_szero>:
 4a8:	bb 27       	eor	r27, r27
 4aa:	66 27       	eor	r22, r22
 4ac:	77 27       	eor	r23, r23
 4ae:	cb 01       	movw	r24, r22
 4b0:	97 f9       	bld	r25, 7
 4b2:	08 95       	ret

000004b4 <__mulsf3>:
 4b4:	0e 94 6d 02 	call	0x4da	; 0x4da <__mulsf3x>
 4b8:	0c 94 20 02 	jmp	0x440	; 0x440 <__fp_round>
 4bc:	0e 94 12 02 	call	0x424	; 0x424 <__fp_pscA>
 4c0:	38 f0       	brcs	.+14     	; 0x4d0 <__mulsf3+0x1c>
 4c2:	0e 94 19 02 	call	0x432	; 0x432 <__fp_pscB>
 4c6:	20 f0       	brcs	.+8      	; 0x4d0 <__mulsf3+0x1c>
 4c8:	95 23       	and	r25, r21
 4ca:	11 f0       	breq	.+4      	; 0x4d0 <__mulsf3+0x1c>
 4cc:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>
 4d0:	0c 94 0f 02 	jmp	0x41e	; 0x41e <__fp_nan>
 4d4:	11 24       	eor	r1, r1
 4d6:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_szero>

000004da <__mulsf3x>:
 4da:	0e 94 31 02 	call	0x462	; 0x462 <__fp_split3>
 4de:	70 f3       	brcs	.-36     	; 0x4bc <__mulsf3+0x8>

000004e0 <__mulsf3_pse>:
 4e0:	95 9f       	mul	r25, r21
 4e2:	c1 f3       	breq	.-16     	; 0x4d4 <__mulsf3+0x20>
 4e4:	95 0f       	add	r25, r21
 4e6:	50 e0       	ldi	r21, 0x00	; 0
 4e8:	55 1f       	adc	r21, r21
 4ea:	62 9f       	mul	r22, r18
 4ec:	f0 01       	movw	r30, r0
 4ee:	72 9f       	mul	r23, r18
 4f0:	bb 27       	eor	r27, r27
 4f2:	f0 0d       	add	r31, r0
 4f4:	b1 1d       	adc	r27, r1
 4f6:	63 9f       	mul	r22, r19
 4f8:	aa 27       	eor	r26, r26
 4fa:	f0 0d       	add	r31, r0
 4fc:	b1 1d       	adc	r27, r1
 4fe:	aa 1f       	adc	r26, r26
 500:	64 9f       	mul	r22, r20
 502:	66 27       	eor	r22, r22
 504:	b0 0d       	add	r27, r0
 506:	a1 1d       	adc	r26, r1
 508:	66 1f       	adc	r22, r22
 50a:	82 9f       	mul	r24, r18
 50c:	22 27       	eor	r18, r18
 50e:	b0 0d       	add	r27, r0
 510:	a1 1d       	adc	r26, r1
 512:	62 1f       	adc	r22, r18
 514:	73 9f       	mul	r23, r19
 516:	b0 0d       	add	r27, r0
 518:	a1 1d       	adc	r26, r1
 51a:	62 1f       	adc	r22, r18
 51c:	83 9f       	mul	r24, r19
 51e:	a0 0d       	add	r26, r0
 520:	61 1d       	adc	r22, r1
 522:	22 1f       	adc	r18, r18
 524:	74 9f       	mul	r23, r20
 526:	33 27       	eor	r19, r19
 528:	a0 0d       	add	r26, r0
 52a:	61 1d       	adc	r22, r1
 52c:	23 1f       	adc	r18, r19
 52e:	84 9f       	mul	r24, r20
 530:	60 0d       	add	r22, r0
 532:	21 1d       	adc	r18, r1
 534:	82 2f       	mov	r24, r18
 536:	76 2f       	mov	r23, r22
 538:	6a 2f       	mov	r22, r26
 53a:	11 24       	eor	r1, r1
 53c:	9f 57       	subi	r25, 0x7F	; 127
 53e:	50 40       	sbci	r21, 0x00	; 0
 540:	9a f0       	brmi	.+38     	; 0x568 <__mulsf3_pse+0x88>
 542:	f1 f0       	breq	.+60     	; 0x580 <__mulsf3_pse+0xa0>
 544:	88 23       	and	r24, r24
 546:	4a f0       	brmi	.+18     	; 0x55a <__mulsf3_pse+0x7a>
 548:	ee 0f       	add	r30, r30
 54a:	ff 1f       	adc	r31, r31
 54c:	bb 1f       	adc	r27, r27
 54e:	66 1f       	adc	r22, r22
 550:	77 1f       	adc	r23, r23
 552:	88 1f       	adc	r24, r24
 554:	91 50       	subi	r25, 0x01	; 1
 556:	50 40       	sbci	r21, 0x00	; 0
 558:	a9 f7       	brne	.-22     	; 0x544 <__mulsf3_pse+0x64>
 55a:	9e 3f       	cpi	r25, 0xFE	; 254
 55c:	51 05       	cpc	r21, r1
 55e:	80 f0       	brcs	.+32     	; 0x580 <__mulsf3_pse+0xa0>
 560:	0c 94 09 02 	jmp	0x412	; 0x412 <__fp_inf>
 564:	0c 94 54 02 	jmp	0x4a8	; 0x4a8 <__fp_szero>
 568:	5f 3f       	cpi	r21, 0xFF	; 255
 56a:	e4 f3       	brlt	.-8      	; 0x564 <__mulsf3_pse+0x84>
 56c:	98 3e       	cpi	r25, 0xE8	; 232
 56e:	d4 f3       	brlt	.-12     	; 0x564 <__mulsf3_pse+0x84>
 570:	86 95       	lsr	r24
 572:	77 95       	ror	r23
 574:	67 95       	ror	r22
 576:	b7 95       	ror	r27
 578:	f7 95       	ror	r31
 57a:	e7 95       	ror	r30
 57c:	9f 5f       	subi	r25, 0xFF	; 255
 57e:	c1 f7       	brne	.-16     	; 0x570 <__mulsf3_pse+0x90>
 580:	fe 2b       	or	r31, r30
 582:	88 0f       	add	r24, r24
 584:	91 1d       	adc	r25, r1
 586:	96 95       	lsr	r25
 588:	87 95       	ror	r24
 58a:	97 f9       	bld	r25, 7
 58c:	08 95       	ret

0000058e <__tablejump2__>:
 58e:	ee 0f       	add	r30, r30
 590:	ff 1f       	adc	r31, r31
 592:	05 90       	lpm	r0, Z+
 594:	f4 91       	lpm	r31, Z
 596:	e0 2d       	mov	r30, r0
 598:	09 94       	ijmp

0000059a <_exit>:
 59a:	f8 94       	cli

0000059c <__stop_program>:
 59c:	ff cf       	rjmp	.-2      	; 0x59c <__stop_program>
